// Generated by CoffeeScript 1.8.0
(function() {
  window.ScaleDance = (function() {
    function ScaleDance(smoothingFactor, min, max) {
      this.min = min;
      this.max = max;
      this.averageDb = 0;
      this.smoothingFactor = smoothingFactor;
      if (this.min == null) {
        this.min = new THREE.Vector3(0.5, 0.5, 0.5);
      }
      if (this.max == null) {
        this.max = new THREE.Vector3(1.5, 1.5, 1.5);
      }
      this.scale = new THREE.Vector3();
    }

    ScaleDance.prototype.update = function(audioWindow, dancer) {
      var smoothingFactor;
      if (audioWindow.averageDb < this.averageDb) {
        this.averageDb = audioWindow.averageDb * this.smoothingFactor + (1 - this.smoothingFactor) * this.averageDb;
      } else {
        smoothingFactor = Math.max(1, this.smoothingFactor * 4);
        this.averageDb = audioWindow.averageDb * smoothingFactor + (1 - smoothingFactor) * this.averageDb;
      }
      this.scale.copy(this.min);
      this.scale.lerp(this.max, this.averageDb);
      return dancer.body.scale.set(this.scale.x, this.scale.y, this.scale.z);
    };

    ScaleDance.prototype.reset = function(dancer) {
      return dancer.body.scale.set(1, 1, 1);
    };

    return ScaleDance;

  })();

}).call(this);
