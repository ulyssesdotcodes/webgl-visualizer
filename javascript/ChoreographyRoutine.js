// Generated by CoffeeScript 1.8.0
(function() {
  window.ChoreographyRoutine = (function() {
    function ChoreographyRoutine() {
      this.id = 0;
      this.dancer = "CubeDancer";
      this.dance = "ScaleDance";
      this.danceMaterial = "ColorDanceMaterial";
      this.dancerParams = {};
      this.danceParams = {};
      this.danceMaterialParams = {};
      this.reset();
      this.routine = [
        [
          {
            id: -1
          }, {
            id: 1,
            dancer: {
              type: 'CubeDancer'
            },
            dance: {
              type: 'PositionDance',
              params: {
                smoothingFactor: 0.5,
                direction: [0, 4.0, 0]
              }
            },
            danceMaterial: {
              type: 'ColorDanceMaterial',
              params: {
                smoothingFactor: 0.5
              }
            }
          }, {
            id: 0,
            dancer: {
              type: 'PointCloudDancer'
            },
            dance: {
              type: 'ScaleDance',
              params: {
                smoothingFactor: 0.5,
                min: [1.0, 1.0, 1.0],
                max: [1.2, 1.2, 1.2]
              }
            },
            danceMaterial: {
              type: 'ColorDanceMaterial',
              params: {
                smoothingFactor: 0.5,
                minL: 0.0
              }
            }
          }
        ], [
          {
            id: 1,
            dancer: {
              type: 'SphereDancer',
              params: {
                position: [0.5, 0, 0.5]
              }
            }
          }, {
            id: 2,
            dancer: {
              type: 'SphereDancer',
              params: {
                position: [0.5, 0, -0.5]
              }
            },
            dance: {
              type: 'ScaleDance',
              params: {
                smoothingFactor: 0.5
              }
            },
            danceMaterial: {
              type: 'ColorDanceMaterial',
              params: {
                smoothingFactor: 0.5
              }
            }
          }, {
            id: 3,
            dancer: {
              type: 'SphereDancer',
              params: {
                position: [-0.5, 0, 0.5]
              }
            },
            dance: {
              type: 'ScaleDance',
              params: {
                smoothingFactor: 0.5
              }
            },
            danceMaterial: {
              type: 'ColorDanceMaterial',
              params: {
                smoothingFactor: 0.5
              }
            }
          }, {
            id: 4,
            dancer: {
              type: 'SphereDancer',
              params: {
                position: [-0.5, 0, -0.5]
              }
            },
            dance: {
              type: 'PositionDance',
              params: {
                smoothingFactor: 0.5
              }
            },
            danceMaterial: {
              type: 'ColorDanceMaterial',
              params: {
                smoothingFactor: 0.5
              }
            }
          }
        ]
      ];
    }

    ChoreographyRoutine.prototype.preview = function() {
      return this.visualizer.receiveChoreography({
        id: this.id,
        dancer: {
          type: this.dancer,
          params: this.dancerParams
        },
        dance: {
          type: this.dance,
          params: this.danceParams
        },
        danceMaterial: {
          type: this.danceMaterial,
          params: this.danceMaterialParams
        }
      });
    };

    ChoreographyRoutine.prototype.add = function() {
      return this.routineMoment.push({
        id: this.id,
        dancer: {
          type: this.dancer,
          params: this.dancerParams
        },
        dance: {
          type: this.dance,
          params: this.danceParams
        },
        danceMaterial: {
          type: this.danceMaterial,
          params: this.danceMaterialParams
        }
      });
    };

    ChoreographyRoutine.prototype.insertBeat = function() {
      this.routineMoment = [];
      return this.routine.splice(++this.routineBeat, 0, this.routineMoment);
    };

    ChoreographyRoutine.prototype.playNext = function() {
      var change, _i, _len, _ref, _results;
      if (this.routineBeat === this.routine.length - 1) {
        this.routineBeat = -1;
      }
      this.routineMoment = this.routine[++this.routineBeat];
      _ref = this.routineMoment;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        change = _ref[_i];
        _results.push(this.visualizer.receiveChoreography(change));
      }
      return _results;
    };

    ChoreographyRoutine.prototype.reset = function() {
      this.routine = [];
      this.routineMoment = [];
      return this.routineBeat = -1;
    };

    return ChoreographyRoutine;

  })();

}).call(this);
